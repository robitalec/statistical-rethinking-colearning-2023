---
title: "Homework 03"
author: "Alec L. Robitaille"
date: "2023-03-01"
---

```{r, include = FALSE}
source('R/packages.R')
```

```{r, eval = FALSE}
source('R/packages.R')
```


## Data 
```{r}
# Data
source('R/data_foxes.R')

# group : ID of group
# avgfood : Average available food in group's territory
# groupsize : Size of each group
# area : Area of group territory
# weight : Body weight of individual fox
DT <- data_foxes(scale = TRUE)
```


## Question 1
> The first two problems are based on the same data. The data in data(foxes) are
116 foxes from 30 different urban groups in England. These fox groups are like
street gangs. Group size (groupsize) varies from 2 to 8 individuals. Each group
maintains its own (almost exclusive) urban territory. Some ter- ritories are
larger than others. The area variable encodes this information. Some territories
also have more avgfood than others. And food influences the weight of each fox.
Assume this following DAG. Use the backdoor criterion and estimate the total
causal influence of A on F. What effect would increasing the area of a territory
have on the amount of food inside it?


### DAG
```{r}
coords <- data.frame(
	name = c('A', 'F', 'G', 'W'),
	x =    c(2,    1,   3,    2),
	y =    c(3,    2,   2,    1)
)
```

```{r}
#| fig.height: 4
#| fig.width: 4
dag <- dagify(
	W ~ F + G,
	F ~ A,
	G ~ F,
  coords = coords
)
dag |> ggdag(seed = 2) + theme_dag()
```

- A: area
- F: avgfood
- G: groupsize
- W: weight



### Estimand

Total causal influence of area on average food. Consider how an intervention
on area would influence average food. 


```{r}
adjustmentSets(dag, exposure = 'A', outcome = 'F', effect = 'total')
```


### Simulation

We don't know much about this data, so to just get an idea of the units
of the data, check the range of each column. 

```{r}
lapply(DT, range)
```


```{r}
# Simulate to determine appropriate priors
# Here just expecting a model defined for F ~ A, with alpha + beta_age * age
simulate_q01 <- function(n, mean_alpha, sd_alpha, mean_area, sd_area, sigma_rate) {
	area <- runif(n, 0, 6)

	alpha <- rnorm(n, mean_alpha, sd_alpha)
	beta_area <- rnorm(n, mean_area, sd_area)
	sigma <- rexp(n, sigma_rate)
	
	food <- rnorm(n, beta_area * area, sigma)
	
	return(data.table(
		area = area,
		food = food
	))	
}


ggplot(simulate_q01(
	n = 1e3, 
	mean_alpha = 3, 
	sd_alpha = 0.5,
	mean_area = 0, 
	sd_area = 0.5, 
	sigma_rate = 1)
) + 
	geom_point(aes(area, food))
```
