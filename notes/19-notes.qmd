---
title: "Lecture 19 Notes"
author: "Alec L. Robitaille"
date: "2023-05-14"
---

```{r, include = FALSE}
source('R/packages.R')
source('R/data_Howell1.R')
```

Linear models are additive combinations of variables
They can be used for many applications, the fit is ok but not ideal
Using linear models gives up scientific information we could use to better inform statistical analysis


LMs, GLMs, GLMMs are flexible machines for decscribing associations

Without an external causal model, linear models have no causal interpretation


## Example: height

The weight of humans is proportional to height. For example, represent humans as a cylinder. 

Starting from the equation for the volume of a cylinder:

$V = \pi r^{2} h$

Represent the radius as proportion of height

$V = \pi (ph)^{2} h$

Finally, the weight depends on the density (k) of the cylinder

$W = kV = k \pi (ph)^{2} h$

And simplified, the formula for the expected weight is

$W = k \pi p^{2}h^{3}$

This is not a regression model, it is a scientific model that arises from the physical structure of human bodies. 


### Statistical model

$W_{i} \sim Distribution(\mu_{i})$

$\mu_{i} = k \pi p^{2} h^{3}$

$p \sim Distribution($

$k \sim Distribution()$


Set priors: choose measurement scales and simulate. 

Units: 
- $\mu_{i}$: kg
- $k$: $kg/cm^{3}}$ 
- $h^{3}$

Measurement scales are social constructs, and it can be easier to divide them out. 
We can do that by rescaling by, eg. the mean height and weight, resulting in the same data dimensionless. 
By dividing by the mean, anything larger than 1 is larger than the mean, anything less than 1 is less than the mean. 


P is a proporiton, therefore between 0-1, less than 0.5 in this case because the radius of a body in this population is less than a half of its height. 

k is a density, it is a positive real number, greater than 1. 

Beta distribution is for proportions, 


```{r}
ggplot() + 
    stat_function(fun = dbeta, args = list(shape1 = 25, shape2 = 50)) + 
    xlim(0, 1) + 
    labs(x = 'p', y = 'dbeta(x, 25, 50)')

ggplot() + 
    stat_function(fun = dexp, args = list(rate = 0.5)) + 
    xlim(0, 5) + 
    labs(x = 'k', y = 'dexp(0.5)')
```

Weight is a positive real, variance scales with the mean. Growth is multiplicative, log-normal is natural choice. 

LogNormal is parameterized using the mu and sigma: mu in log-normal is mean of log, not mean of observed. Therefore when we model, we need to exponentiate mu because the formula corresponds to weight on the natural scale. 


$W_{i} \sim LogNormal(\mu_{i}, \sigma)$

$exp(\mu_{i}) = k \pi p^{2} h^{3}$

$p \sim Beta(25, 50)$

$k \sim Exponential(0.5)$

$\sigma \sim Exponential(1)$

```{r}
DT <- data_Howell()

form <- bf(scale_weight_div_mean ~ log(k * 3.1415 * p ^ 2 * scale_height_div_mean ^ 3),
       p ~ 1,
       k ~ 1,
       nl = TRUE)

get_prior(form, data = DT, family = 'lognormal')
```


```{r l19_nl_howell}
tar_read(m_l19_nl_howell)
m_l19_nl_howell$prior
m_l19_nl_howell

pred <- add_predicted_draws(
    m_l19_nl_howell, 
    newdata = data.frame(scale_height_div_mean = seq(0, 1.3, 0.01))
)

ggplot(pred, aes(scale_height_div_mean, .prediction)) + 
    stat_lineribbon() + 
    geom_point(aes(scale_height_div_mean, scale_weight_div_mean), data = DT) + 
    scale_fill_grey(start = 0.8, end = 0.5) + 
    labs(x = 'Height (scaled)', y = 'Weight (scaled)')
```